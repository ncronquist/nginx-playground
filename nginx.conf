user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
  worker_connections 1024;
}


http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '{\n  "time": "$time_iso8601",\n  "remote_addr": "$remote_addr",\n  "request": "$request",\n  '
  '"http_host": "$http_host",\n  "host": "$host",\n  '
  '"status": $status,\n  "body_bytes_sent": $body_bytes_sent,\n  "http_referer": "$http_referer",\n  '
  '"http_user_agent": "$http_user_agent",\n  "http_x_forwarded_for": "$http_x_forwarded_for",\n  '
  '"upstream_addr": "$upstream_addr",\n  "request_uri": "$request_uri"\n}';

  access_log /var/log/nginx/access.log main;

  sendfile on;

  keepalive_timeout 65;

  server {
    listen 80;
    # In order to use the example.com domain name, you'll need to add an entry to your /etc/hosts file
    server_name localhost example.com;

    location /ping {
      return 200 'pong';
      add_header Content_Type text/plain;
    }

    location / {
      proxy_pass http://jsonplaceholder.typicode.com/;
      # Comment out the above proxy_pass and uncomment this localhost proxy_pass
      # in order to test locally with netcat to see the url and traffic being
      # proxied from Nginx.
      # proxy_pass 'http://localhost:3000/';
      proxy_http_version 1.1;
      proxy_pass_request_body on;
      proxy_pass_request_headers on;
      proxy_set_header Host $proxy_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Client-IP $remote_addr;
    }
  }
}
